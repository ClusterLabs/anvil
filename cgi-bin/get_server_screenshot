#!/usr/bin/perl
#
# Gets a server VM's screenshot and convert it to a Base64 string.
#

use strict;
use warnings;
use Anvil::Tools;
use JSON;

$| = 1;

my $THIS_FILE           =  ($0 =~ /^.*\/(.*)$/)[0];
my $running_directory   =  ($0 =~ /^(.*?)\/$THIS_FILE$/)[0];
if (($running_directory =~ /^\./) && ($ENV{PWD}))
{
	$running_directory =~ s/^\./$ENV{PWD}/;
}

my $anvil = Anvil::Tools->new();

sub is_job_incomplete
{
	my $parameters = shift;
	my $job_uuid   = $parameters->{job_uuid};

	my $query = "
SELECT
	job_progress
FROM
	public.jobs
WHERE
	job_uuid = ".$anvil->Database->quote($job_uuid)."
;";

	my $job_progress = $anvil->Database->query({ query => $query, source => $THIS_FILE, line => __LINE__ })->[0]->[0];

	return $job_progress == 100 ? 0 : 1;
}

sub get_server_host_uuid
{
	my $parameters  = shift;
	my $server_uuid = $parameters->{server_uuid};

	my $query = "
SELECT
	server_host_uuid
FROM
	public.servers
WHERE
	server_uuid = ".$anvil->Database->quote($server_uuid)."
;";

	return $anvil->Database->query({ query => $query, source => $THIS_FILE, line => __LINE__ })->[0]->[0];
}

sub get_screenshot
{
	my $parameters       = shift;
	my $server_uuid      = $parameters->{server_uuid};
	my $server_host_uuid = $parameters->{server_host_uuid};
	my $resize_args      = defined $parameters->{resize_args} ? $parameters->{resize_args} : "512x512";

	my ($job_uuid) = $anvil->Database->insert_or_update_jobs({
		job_command     => $anvil->data->{path}{exe}{'anvil-get-server-screenshot'},
		job_data        => "server-uuid=".$server_uuid."\nresize=".$resize_args,
		job_host_uuid   => $server_host_uuid,
		job_description => "job_0357",
		job_name        => "cgi-bin::get_server_screenshot::".$server_uuid,
		job_progress    => 0,
		job_title       => "job_0356"
	});

	# Wait until the job is complete before continuing.
	while(is_job_incomplete({ job_uuid => $job_uuid }))
	{
		sleep(2);
	}

	my $query = "
SELECT state_note
FROM public.states
WHERE state_name = ".$anvil->Database->quote("server_screenshot::".$server_uuid)."
;";

	my $encoded_image = $anvil->Database->query({ query => $query, source => $THIS_FILE, line => __LINE__ })->[0]->[0];

	return $encoded_image;
}

$anvil->Get->switches;

$anvil->Database->connect;
$anvil->Log->entry({source => $THIS_FILE, line => __LINE__, level => 2, secure => 0, key => "log_0132"});
if (not $anvil->data->{sys}{database}{connections})
{
	# No databases, exit.
	$anvil->Log->entry({source => $THIS_FILE, line => __LINE__, level => 0, 'print' => 1, priority => "err", key => "error_0003"});
	$anvil->nice_exit({exit_code => 1});
}

my $cookie_problem = $anvil->Account->read_cookies();

# Don't do anything data-related if the user is not logged in.
if ($cookie_problem)
{
	$anvil->Log->entry({ source => $THIS_FILE, line => __LINE__, level => 0, 'print' => 1, priority => "err", key => "error_0307" });
	$anvil->nice_exit({ exit_code => 1 });
}

# Read in any CGI variables, if needed.
$anvil->Get->cgi();

print $anvil->Template->get({ file => "shared.html", name => "json_headers", show_name => 0 })."\n";

my $server_uuid = defined $anvil->data->{cgi}{server_uuid}{value} ? $anvil->data->{cgi}{server_uuid}{value} : $anvil->data->{switches}{'server-uuid'};
my $resize_args = defined $anvil->data->{cgi}{resize}{value}      ? $anvil->data->{cgi}{resize}{value}      : $anvil->data->{switches}{'resize'};

my $response_body = {};

if ($server_uuid)
{
	my $encoded_image = get_screenshot({
		server_uuid      => $server_uuid,
		server_host_uuid => get_server_host_uuid({ server_uuid => $server_uuid }),
		resize_args      => $resize_args
	});

	if (defined $encoded_image)
	{
		$response_body->{screenshot} = $encoded_image;
	}
}

print JSON->new->utf8->encode($response_body)."\n";
