#!/usr/bin/perl
# 
# Exit codes;
# 0 = Normal exit.
# 1 = No database connections available.

use strict;
use warnings;
use Anvil::Tools;

# Disable buffering
$| = 1;

my $THIS_FILE           =  ($0 =~ /^.*\/(.*)$/)[0];
my $running_directory   =  ($0 =~ /^(.*?)\/$THIS_FILE$/)[0];
if (($running_directory =~ /^\./) && ($ENV{PWD}))
{
	$running_directory =~ s/^\./$ENV{PWD}/;
}

my $anvil = Anvil::Tools->new({log_level => 2, log_secure => 1});

$anvil->Storage->read_config({file => "/etc/anvil/anvil.conf"});

# Read switches
$anvil->Get->switches;

# Connect to DBs.
$anvil->Database->connect;
$anvil->Log->entry({source => $THIS_FILE, line => __LINE__, level => 2, secure => 0, key => "log_0132"});
if (not $anvil->data->{sys}{database}{connections})
{
	# No databases, exit.
	print $anvil->Words->string({key => "error_0003"})."\n";
	$anvil->Log->entry({source => $THIS_FILE, line => __LINE__, level => 0, secure => 0, key => "error_0003"});
	$anvil->nice_exit({exit_code => 1});
}

# If the uptime is less than ten minutes, clear the reboot flag.
my $uptime = $anvil->Storage->read_file({file => $anvil->data->{path}{proc}{uptime}});

$anvil->Log->entry({source => $THIS_FILE, line => __LINE__, level => 1, secure => 0, key => "log_0200"});
$anvil->Database->insert_or_update_variables({
	variable_name         => "reboot::needed", 
	variable_value        => "0", 
	variable_default      => "0", 
	variable_description  => "striker_0089", 
	variable_section      => "system", 
	variable_source_uuid  => $anvil->Get->host_uuid, 
	variable_source_table => "hosts", 
	update_value_only     => 1, 
});

# We're done
$anvil->nice_exit({exit_code => 0});
